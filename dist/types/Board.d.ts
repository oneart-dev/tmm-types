import { ControllersApiErrorResponse, ControllersApiSuccessArrayServicesDashboard, ControllersApiSuccessInt64, ControllersApiSuccessNoData, ControllersApiSuccessResponse, ControllersApiSuccessServicesDashboard, ControllersApiSuccessString, ControllersApiWarningResponse, ControllersLoadBoardResponse, ControllersLoadLayoutResponse, ControllersUnauthorizedResponse, DtoDashboardCreateForm, DtoDashboardExportForm, DtoDashboardUpdateForm, DtoDashboardsSortForm, DtoWidgetCreateForm, DtoWidgetUpdateForm, ServicesLoadBoardResponseChunk, ServicesWidgetCreateResponse } from "./data-contracts";
import { HttpClient, RequestParams } from "./http-client";
export declare class Board<SecurityDataType = unknown> extends HttpClient<SecurityDataType> {
    boardList: (params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersApiSuccessArrayServicesDashboard, string | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    boardUpdate: (payload: DtoDashboardCreateForm, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersApiSuccessServicesDashboard, string | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    counterDashboardDetail: (id: number, query?: {
        api_key_id?: number[] | undefined;
        api_key_id_params?: "not:" | undefined;
        avgTrades15m6h?: string | undefined;
        avgTrades1h24h?: string | undefined;
        avgTrades1m30m?: string | undefined;
        avgTrades30m12h?: string | undefined;
        avgTrades5m2h?: string | undefined;
        avgVolume15m6h?: string | undefined;
        avgVolume1h24h?: string | undefined;
        avgVolume1m30m?: string | undefined;
        avgVolume30m12h?: string | undefined;
        avgVolume5m2h?: string | undefined;
        btcCorr1m50?: string | undefined;
        btcCorr5m20?: string | undefined;
        category?: number[] | undefined;
        category_params?: "not:" | undefined;
        closeBetween?: string | undefined;
        daysOfWeek?: number[] | undefined;
        durationBetween?: string | undefined;
        durationType?: "today" | "yesterday" | "past1w" | "1w" | "1m" | "7d" | "30d" | "90d" | undefined;
        exit_tags?: number[] | undefined;
        exit_tags_params?: "not:" | "all:" | "not:all:" | "only:" | undefined;
        extraInfo?: "conclusion:empty" | "conclusion:not-empty" | "desc:empty" | "desc:not-empty" | "mentor_note:not-empty" | "mentor_note:empty" | undefined;
        fundingRate?: string | undefined;
        groupBy?: "hour" | "minute" | "month" | "week" | "date" | undefined;
        headers?: string[] | undefined;
        hours_of_day?: number[] | undefined;
        hours_of_day_params?: string | undefined;
        id?: number | undefined;
        ids?: number[] | undefined;
        leverageBetween?: string | undefined;
        maeBetween?: string | undefined;
        mfeBetween?: string | undefined;
        multiplier?: string | undefined;
        natr1m30?: string | undefined;
        natr5m14?: string | undefined;
        openBetween?: string | undefined;
        percentBetween?: string | undefined;
        priceRange12h?: string | undefined;
        priceRange15m?: string | undefined;
        priceRange1h?: string | undefined;
        priceRange1m?: string | undefined;
        priceRange24h?: string | undefined;
        priceRange2h?: string | undefined;
        priceRange30m?: string | undefined;
        priceRange4h?: string | undefined;
        priceRange5m?: string | undefined;
        priceRange6h?: string | undefined;
        profitBetween?: string | undefined;
        profitDepositBetween?: string | undefined;
        side?: "LONG" | "SHORT" | undefined;
        state?: 0 | 2 | 1 | undefined;
        symbol?: string[] | undefined;
        symbol_params?: "not:" | undefined;
        tags?: number[] | undefined;
        tags_params?: "not:" | "all:" | "not:all:" | "only:" | undefined;
        trade_time?: string | undefined;
        trades12h?: string | undefined;
        trades15m?: string | undefined;
        trades1h?: string | undefined;
        trades1m?: string | undefined;
        trades24h?: string | undefined;
        trades2h?: string | undefined;
        trades30m?: string | undefined;
        trades4h?: string | undefined;
        trades5m?: string | undefined;
        trades6h?: string | undefined;
        tradesSpike15m6h?: string | undefined;
        tradesSpike1h24h?: string | undefined;
        tradesSpike1m30m?: string | undefined;
        tradesSpike30m12h?: string | undefined;
        tradesSpike5m2h?: string | undefined;
        user_id?: number | undefined;
        volume12h?: string | undefined;
        volume15m?: string | undefined;
        volume1h?: string | undefined;
        volume1m?: string | undefined;
        volume24h?: string | undefined;
        volume2h?: string | undefined;
        volume30m?: string | undefined;
        volume4h?: string | undefined;
        volume5m?: string | undefined;
        volume6h?: string | undefined;
        volumeBetween?: string | undefined;
        volumeFrom?: number | undefined;
        volumeSpike15m6h?: string | undefined;
        volumeSpike1h24h?: string | undefined;
        volumeSpike1m30m?: string | undefined;
        volumeSpike30m12h?: string | undefined;
        volumeSpike5m2h?: string | undefined;
        volumeTo?: number | undefined;
        with_archive?: boolean | undefined;
    } | undefined, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersApiSuccessInt64, string | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    counterWidgetDetail: (id: number, query?: {
        api_key_id?: number[] | undefined;
        api_key_id_params?: "not:" | undefined;
        avgTrades15m6h?: string | undefined;
        avgTrades1h24h?: string | undefined;
        avgTrades1m30m?: string | undefined;
        avgTrades30m12h?: string | undefined;
        avgTrades5m2h?: string | undefined;
        avgVolume15m6h?: string | undefined;
        avgVolume1h24h?: string | undefined;
        avgVolume1m30m?: string | undefined;
        avgVolume30m12h?: string | undefined;
        avgVolume5m2h?: string | undefined;
        btcCorr1m50?: string | undefined;
        btcCorr5m20?: string | undefined;
        category?: number[] | undefined;
        category_params?: "not:" | undefined;
        closeBetween?: string | undefined;
        daysOfWeek?: number[] | undefined;
        durationBetween?: string | undefined;
        durationType?: "today" | "yesterday" | "past1w" | "1w" | "1m" | "7d" | "30d" | "90d" | undefined;
        exit_tags?: number[] | undefined;
        exit_tags_params?: "not:" | "all:" | "not:all:" | "only:" | undefined;
        extraInfo?: "conclusion:empty" | "conclusion:not-empty" | "desc:empty" | "desc:not-empty" | "mentor_note:not-empty" | "mentor_note:empty" | undefined;
        fundingRate?: string | undefined;
        groupBy?: "hour" | "minute" | "month" | "week" | "date" | undefined;
        headers?: string[] | undefined;
        hours_of_day?: number[] | undefined;
        hours_of_day_params?: string | undefined;
        id?: number | undefined;
        ids?: number[] | undefined;
        leverageBetween?: string | undefined;
        maeBetween?: string | undefined;
        mfeBetween?: string | undefined;
        multiplier?: string | undefined;
        natr1m30?: string | undefined;
        natr5m14?: string | undefined;
        openBetween?: string | undefined;
        percentBetween?: string | undefined;
        priceRange12h?: string | undefined;
        priceRange15m?: string | undefined;
        priceRange1h?: string | undefined;
        priceRange1m?: string | undefined;
        priceRange24h?: string | undefined;
        priceRange2h?: string | undefined;
        priceRange30m?: string | undefined;
        priceRange4h?: string | undefined;
        priceRange5m?: string | undefined;
        priceRange6h?: string | undefined;
        profitBetween?: string | undefined;
        profitDepositBetween?: string | undefined;
        side?: "LONG" | "SHORT" | undefined;
        state?: 0 | 2 | 1 | undefined;
        symbol?: string[] | undefined;
        symbol_params?: "not:" | undefined;
        tags?: number[] | undefined;
        tags_params?: "not:" | "all:" | "not:all:" | "only:" | undefined;
        trade_time?: string | undefined;
        trades12h?: string | undefined;
        trades15m?: string | undefined;
        trades1h?: string | undefined;
        trades1m?: string | undefined;
        trades24h?: string | undefined;
        trades2h?: string | undefined;
        trades30m?: string | undefined;
        trades4h?: string | undefined;
        trades5m?: string | undefined;
        trades6h?: string | undefined;
        tradesSpike15m6h?: string | undefined;
        tradesSpike1h24h?: string | undefined;
        tradesSpike1m30m?: string | undefined;
        tradesSpike30m12h?: string | undefined;
        tradesSpike5m2h?: string | undefined;
        user_id?: number | undefined;
        volume12h?: string | undefined;
        volume15m?: string | undefined;
        volume1h?: string | undefined;
        volume1m?: string | undefined;
        volume24h?: string | undefined;
        volume2h?: string | undefined;
        volume30m?: string | undefined;
        volume4h?: string | undefined;
        volume5m?: string | undefined;
        volume6h?: string | undefined;
        volumeBetween?: string | undefined;
        volumeFrom?: number | undefined;
        volumeSpike15m6h?: string | undefined;
        volumeSpike1h24h?: string | undefined;
        volumeSpike1m30m?: string | undefined;
        volumeSpike30m12h?: string | undefined;
        volumeSpike5m2h?: string | undefined;
        volumeTo?: number | undefined;
        with_archive?: boolean | undefined;
    } | undefined, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersApiSuccessInt64, string | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    layoutDetail: (code: string, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersLoadLayoutResponse, string | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    layoutInstallCreate: (code: string, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersApiSuccessServicesDashboard, string | ControllersApiErrorResponse | ControllersApiWarningResponse | ControllersUnauthorizedResponse>>;
    layoutsList: (params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersApiSuccessArrayServicesDashboard, string | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    publicLoadDetail: (code: string, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersLoadBoardResponse, string | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    sortCreate: (payload: DtoDashboardsSortForm, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersApiSuccessNoData, string | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    widgetTempCreate: (payload: DtoWidgetCreateForm, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ServicesWidgetCreateResponse, string | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    widgetUpdate: (id: number, payload: DtoWidgetCreateForm, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ServicesWidgetCreateResponse, string | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    widgetCreate: (id: number, payload: DtoWidgetUpdateForm, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersApiSuccessResponse, string | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    widgetDelete: (id: number, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersApiSuccessNoData, string | void | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    boardCreate: (id: number, payload: DtoDashboardUpdateForm, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersApiSuccessNoData, string | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    boardDelete: (id: number, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersApiSuccessNoData, string | void | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    cloneCreate: (id: number, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersApiSuccessServicesDashboard, string | void | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    exportCreate: (id: number, payload: DtoDashboardExportForm, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersApiSuccessString, string | ControllersApiErrorResponse | ControllersApiWarningResponse | ControllersUnauthorizedResponse>>;
    loadDetail: (id: number, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ServicesLoadBoardResponseChunk, string | ControllersApiErrorResponse | ControllersUnauthorizedResponse>>;
    shortLinkCreate: (id: number, params?: RequestParams) => Promise<import("./http-client").HttpResponse<ControllersApiSuccessString, string | ControllersApiErrorResponse | ControllersApiWarningResponse | ControllersUnauthorizedResponse>>;
}
//# sourceMappingURL=Board.d.ts.map